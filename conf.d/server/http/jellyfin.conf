# Proxy Jellyfin
server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;

  server_name media.samson.org.au;

  # Crypto Settings
  include /etc/nginx/conf.d/ssl/ssl-samson.org.au.conf;

  # TLS Settings
  include /etc/nginx/conf.d/ssl/tls.conf;

  # Security Headers
  include /etc/nginx/conf.d/headers/headers-jellyfin.conf;

  # Increase body size
  client_max_body_size 20M;

  location = / {
    # Access Rules
    include /etc/nginx/conf.d/access/multimedia.conf;

    return 302 http://$host/web/;
    #return 302 https://$host/web/;
  }

  location / {
    # Access Rules
    include /etc/nginx/conf.d/access/multimedia.conf;

    # Proxy main Jellyfin traffic
    proxy_pass http://10.20.20.21:8096;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Protocol $scheme;
    proxy_set_header X-Forwarded-Host $http_host;

    # Disable buffering when the nginx proxy gets very resource heavy upon streaming
    proxy_buffering off;
  }

  location = /web/ {
    # Access Rules
    include /etc/nginx/conf.d/access/multimedia.conf;

    # Proxy main Jellyfin traffic
    proxy_pass http://10.20.20.21:8096/web/index.html;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Protocol $scheme;
    proxy_set_header X-Forwarded-Host $http_host;
  }

  location = /socket {
    # Access Rules
    include /etc/nginx/conf.d/access/multimedia.conf;

    # Proxy Jellyfin Websockets traffic
    proxy_pass http://10.20.20.21:8096;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Protocol $scheme;
    proxy_set_header X-Forwarded-Host $http_host;
  }
}
